USE PROJECT3;
-- COUNTRY TABLE
CREATE TABLE COUNTRY(
COUNTRY_ID INT,
COUNTRY_NAME VARCHAR(24) NOT NULL,
STATE_ID INT,
DIST_ID INT
);

--ADDING CONTRAINTS 

ALTER TABLE COUNTRY
ALTER COLUMN COUNTRY_ID INT NOT NULL;

ALTER TABLE COUNTRY
ADD CONSTRAINT PK_COUNTRY_ID
PRIMARY KEY (COUNTRY_ID);

ALTER TABLE COUNTRY
ADD CONSTRAINT NN_COUNTRY_NAME
CHECK (COUNTRY_NAME IS NOT NULL);

ALTER TABLE COUNTRY
ADD STATE_ID INT FOREIGN KEY
REFERENCES STATES(STATE_ID);

ALTER TABLE COUNTRY
ADD DIST_ID INT FOREIGN KEY
REFERENCES DIST(DIST_ID); 

----------------------------------------------------------------------------
----------------------------------------------------------------------------

-- STATE TABLE
CREATE TABLE STATES(
STATE_ID INT,
STATE_NAME VARCHAR(24) NOT NULL,
COUNTRY_ID INT,
DIST_ID INT
);

ALTER TABLE STATES
ADD CONSTRAINT PK_STATE_ID
PRIMARY KEY(STATE_ID);

ALTER TABLE STATES
ADD CONSTRAINT NN_STATE_NAME
CHECK(STATE_NEME IS NOT NULL);

ALTER TABLE STATES
ADD COUNTRY_ID INT FOREIGN KEY
REFERENCES COUNTRY(COUNTRY_ID);

ALTER TABLE DIST
ADD DIST_ID INT FOREIGN KEY
REFERENCES DIST(DIST_ID);

-----------------------------------------------------------------------------
------------------------------------------------------------------------------

-- DIST TABLE
CREATE TABLE DIST(
DIST_ID INT,
DIST_NAME VARCHAR(24) NOT NULL,
STATE_ID INT,
COUNTRY_ID INT
);

ALTER TABLE DIST
ADD CONSTRAINT PK_DIST_ID
PRIMARY KEY (DIST_ID);

ALTER TABLE DIST
ADD CONSTRAINT NN_DIST_NAME
CHECK (DIST_NAME IS NOT NULL);

ALTER TABLE DIST
ADD STATE_ID INT FOREIGN KEY
REFERENCES STATES(STATE_ID);

ALTER TABLE DIST
ADD COUNTRY_ID INT FOREIGN KEY
REFERENCES COUNTRY(COUNTRY_ID);

---------------------------------------------------------------------
---------------------------------------------------------------------

--COUSTOMER TABLE
CREATE TABLE COUSTOMER(
C_ID INT PRIMARY KEY,
C_NAME VARCHAR(24) NOT NULL,
C_DOB VARCHAR(24) NOT NULL,
C_ANI_DATE VARCHAR(24) NOT NULL,
C_PWD VARCHAR(24) NOT NULL,
);

--------------------------------------------------------------------------
--------------------------------------------------------------------------

--MOBILE TYPE TABLE
CREATE TABLE MOBILE_TYPE(
MOBILE_ID INT PRIMARY KEY,
MOBILE_TYPE VARCHAR(24)
);

--EMAIL TYPE
CREATE TABLE EMAIL_TYPE(
E_ID INT PRIMARY KEY,
E_TYPE VARCHAR(24)
);

-- MOBILE TABLE
CREATE TABLE MOBILE(
PHONE_ID INT PRIMARY KEY,
PHONE_NUMBER NUMERIC(10) NOT NULL,
C_ID INT,
MOBILE_ID INT
);

ALTER TABLE MOBILE
ADD C_ID INT FOREIGN KEY
REFERENCES CUSTOMER(C_ID);

ALTER TABLE MOBILE
ADD MOBILE_ID INT FOREIGN KEY
REFERENCES MOBILE_TYPE(MOBILE_ID);


--EMAIL TABLE

CREATE TABLE EMAIL(
EMAIL_ID INT,
EMAIL VARCHAR(24) NOT NULL,
C_ID INT,
E_ID INT
);

ALTER TABLE EMAIL
ADD C_ID INT FOREIGN KEY
REFERENCES CUSTOMER(C_ID);

ALTER TABLE EMAIL
ADD E_ID INT FOREIGN KEY
REFERENCES EMAIL_TYPE(E_ID);

-------------------------------------------------------------
-----------------------------------------------------------------

--ADDRESS TYPE TABLE
CREATE TABLE ADDRESS_TYPE(
A_ID INT,
A_TYPE VARCHAR(24)
);

-- ADDRESS TABLE

CREATE TABLE ADDRES(
AD_ID INT PRIMARY KEY,
ADDRES VARCHAR(24) NOT NULL,
C_ID INT,
A_ID INT
);


ALTER TABLE ADDRES
ADD C_ID INT FOREIGN KEY
REFERENCES CUSTOMER(C_ID);

ALTER TABLE ADDRES
ADD A_ID INT FOREIGN KEY
REFERENCES ADDRESS_TYPE(A_ID);

-----------------------------------------------------------------------------
-----------------------------------------------------------------------------

--ORDER TABLE 

CREATE TABLE ORDERS(
ORDER_ID INT PRIMARY KEY,
C_ID INT,
ORDER_DATE VARCHAR(24) NOT NULL,
DELIVERY_DATE VARCHAR(24) NOT NULL,
AD_ID INT,
AMOUNT INT
);

ALTER TABLE ORDERS
ADD C_ID INT FOREIGN KEY
REFERENCES CUSTOMER(C_ID);

ALTER TABLE ORDERS 
ADD AD_ID INT FOREIGN KEY
REFERENCES ADDRES(AD_ID);

-----------------------------------------------------------------------
-----------------------------------------------------------------------

CREATE TABLE ITEMS(
ITEM_ID INT PRIMARY KEY,
CATEGORY VARCHAR(24) NOT NULL,
PRICE INT,
ORDER_ID INT
);

ALTER TABLE ITEMS
ADD OREDER_ID INT FOREIGN KEY
REFERENCES ORDERS(ORDER_ID);
